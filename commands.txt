# Build docker image "Dockerfile"       t:gives name to image
docker build -t my-python-env .

# Run docker        it:interactive_terminal rm:remove_cntnr_on_exit v:mount_project_app w:working_dir
docker run -it --rm -v $(pwd):/app -w /app my-python-env

# Persistent container
docker run -it -v $(pwd):/app -w /app --name Bubble my-python-env
    # Next time     a:attach_to_cntnr i:interactive_commands
docker start -ai Bubble

# Check container list
docker ps -a

# Prints detailed system-wide information about your Docker installation and environment
docker info

# Remove container
docker rm <container_id_or_name>

# Rename container
docker rename <old_name> <new_name>

# Save docker image (cross-platform)
docker images
docker save -o pythonimage.tar my-python-env:latest
docker load -i pythonimage.tar
docker run -it my-python-env:latest


# Git doesn't allow >100 files so use docker hub instead.
    # Tag your image for Docker Hub
docker tag my-python-env:latest your-dockerhub-username/my-python-env:latest

    # Login to Docker Hub
docker login

    # Push the image
docker push your-dockerhub-username/my-python-env:latest

    # Commands used:
  641  docker tag my-python-env:latest syamilisn/my-python-env:latest
  642  docker push syamilisn/my-python-env:latest

    # On Guest OS:
    docker pull syamilisn/my-python-env:latest
    docker run -it syamilisn/my-python-env:latest

    # Build for multiple-architecture amd64(windows) and arm64(mac)
    docker buildx create --use

        # This command is so that it will work seemlessly on multi-arch
    docker buildx build \
    --platform linux/amd64,linux/arm64 \
    -t syamilisn/my-python-env:latest \
    --push .


# mount local 
docker-compose -p x up -d^C
docker exec -it Bubble bash
#######################################

# Useful git commands 
git status
git log -n 1
git merge
git rebase
git push

# To purge larger files from getting added to git

  626  brew install bfg\n
  627  brew install git-filter-repo\n
  628  git clone --mirror https://github.com/syamilisn/Dev_Docker.git Dev_Docker_backup.git\n
  629  git filter-repo --path pythonimage.tar --invert-paths\n
  630  bfg --delete-files pythonimage.tar\n
  631  \tgit reflog expire --expire=now --all && git gc --prune=now --aggressive
  632  git add .gitignore\ngit commit -m "Ignore large docker image tar"\ngit push origin main\n